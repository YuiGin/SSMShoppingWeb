<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="packageMapper.base.ItemOrderBaseMapper">


    <insert id="insertItemOrder"  useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `item_order`
        (
        <trim suffixOverrides=",">
                    <if test="id!=null">
                        `id`,
                    </if>
                    <if test="item_id!=null">
                        `item_id`,
                    </if>
                    <if test="user_id!=null">
                        `user_id`,
                    </if>
                    <if test="code!=null">
                        `code`,
                    </if>
                    <if test="addTime!=null">
                        `addTime`,
                    </if>
                    <if test="total!=null">
                        `total`,
                    </if>
                    <if test="isDelete!=null">
                        `isDelete`,
                    </if>
                    <if test="status!=null">
                        `status`,
                    </if>
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
                <if test="id!=null">
                    #{id},
                </if>
                <if test="item_id!=null">
                    #{item_id},
                </if>
                <if test="user_id!=null">
                    #{user_id},
                </if>
                <if test="code!=null">
                    #{code},
                </if>
                <if test="addTime!=null">
                    #{addTime},
                </if>
                <if test="total!=null">
                    #{total},
                </if>
                <if test="isDelete!=null">
                    #{isDelete},
                </if>
                <if test="status!=null">
                    #{status},
                </if>
        </trim>
        )
    </insert>




    <update id="updateItemOrder">
        UPDATE `item_order`
        SET
        <trim suffixOverrides=",">
            <if test="item_id != null">
                `item_id` = #{item_id},
            </if>
            <if test="user_id != null">
                `user_id` = #{user_id},
            </if>
            <if test="code != null and code!=''">
                `code` = #{code},
            </if>
            <if test="addTime != null">
                `addTime` = #{addTime},
            </if>
            <if test="total != null and total!=''">
                `total` = #{total},
            </if>
            <if test="isDelete != null">
                `isDelete` = #{isDelete},
            </if>
            <if test="status != null">
                `status` = #{status},
            </if>
        </trim>
        WHERE
        <trim suffixOverrides="and">
                `id` = #{id} and
        </trim>
    </update>

    <update id="update">
        UPDATE `item_order`
        SET
        <trim suffixOverrides=",">
        <if test="set.item_id != null">
            `item_id` = #{set.item_id},
        </if>
        <if test="set.user_id != null">
            `user_id` = #{set.user_id},
        </if>
        <if test="set.code != null and set.code!=''">
            `code` = #{set.code},
        </if>
        <if test="set.addTime != null">
            `addTime` = #{set.addTime},
        </if>
        <if test="set.total != null and set.total!=''">
            `total` = #{set.total},
        </if>
        <if test="set.isDelete != null">
            `isDelete` = #{set.isDelete},
        </if>
        <if test="set.status != null">
            `status` = #{set.status},
        </if>
        </trim>
        <trim prefix="where" suffixOverrides="and | or">
                <if test="where.idList != null">
                    `id` in
                    <foreach collection="where.idList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.idSt !=null">
                `id` >= #{where.idSt} and
            </if>
            <if test="where.idEd!=null">
                `id` &lt;= #{where.idEd} and
            </if>
                <if test="where.item_idList != null">
                    `item_id` in
                    <foreach collection="where.item_idList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.item_idSt !=null">
                `item_id` >= #{where.item_idSt} and
            </if>
            <if test="where.item_idEd!=null">
                `item_id` &lt;= #{where.item_idEd} and
            </if>
                <if test="where.user_idList != null">
                    `user_id` in
                    <foreach collection="where.user_idList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.user_idSt !=null">
                `user_id` >= #{where.user_idSt} and
            </if>
            <if test="where.user_idEd!=null">
                `user_id` &lt;= #{where.user_idEd} and
            </if>
                <if test="where.codeList != null">
                    `code` in
                    <foreach collection="where.codeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzyCode!=null and where.fuzzyCode.size()>0">
                (
                <foreach collection="where.fuzzyCode"  separator="or" item="item">
                    `Code` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyCode!=null and where.rightFuzzyCode.size()>0">
                (
                <foreach collection="where.rightFuzzyCode"  separator="or" item="item">
                    `Code` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
                <if test="where.addTimeList != null">
                    `addTime` in
                    <foreach collection="where.addTimeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.addTimeSt !=null">
                `addTime` >= #{where.addTimeSt} and
            </if>
            <if test="where.addTimeEd!=null">
                `addTime` &lt;= #{where.addTimeEd} and
            </if>
                <if test="where.totalList != null">
                    `total` in
                    <foreach collection="where.totalList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzyTotal!=null and where.fuzzyTotal.size()>0">
                (
                <foreach collection="where.fuzzyTotal"  separator="or" item="item">
                    `Total` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyTotal!=null and where.rightFuzzyTotal.size()>0">
                (
                <foreach collection="where.rightFuzzyTotal"  separator="or" item="item">
                    `Total` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
                <if test="where.isDeleteList != null">
                    `isDelete` in
                    <foreach collection="where.isDeleteList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.isDeleteSt !=null">
                `isDelete` >= #{where.isDeleteSt} and
            </if>
            <if test="where.isDeleteEd!=null">
                `isDelete` &lt;= #{where.isDeleteEd} and
            </if>
                <if test="where.statusList != null">
                    `status` in
                    <foreach collection="where.statusList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.statusSt !=null">
                `status` >= #{where.statusSt} and
            </if>
            <if test="where.statusEd!=null">
                `status` &lt;= #{where.statusEd} and
            </if>
        </trim>
    </update>


    <resultMap type="packageModel.ItemOrder" id="ItemOrderMap">
        <result property="id" column="id"/>
        <result property="item_id" column="item_id"/>
        <result property="user_id" column="user_id"/>
        <result property="code" column="code"/>
        <result property="addTime" column="addTime"/>
        <result property="total" column="total"/>
        <result property="isDelete" column="isDelete"/>
        <result property="status" column="status"/>
    </resultMap>


    <select id="queryItemOrder" resultMap="ItemOrderMap">
        select
        <include refid="baseResult"></include>
        from  `item_order`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="id != null">
                `id` = #{id} and
            </if>
            <if test="item_id != null">
                `item_id` = #{item_id} and
            </if>
            <if test="user_id != null">
                `user_id` = #{user_id} and
            </if>
            <if test="code != null and code!=''">
                `code` = #{code} and
            </if>
            <if test="addTime != null">
                `addTime` = #{addTime} and
            </if>
            <if test="total != null and total!=''">
                `total` = #{total} and
            </if>
            <if test="isDelete != null">
                `isDelete` = #{isDelete} and
            </if>
            <if test="status != null">
                `status` = #{status} and
            </if>
            <if test = "(_parameter instanceof packageModel.ItemOrder$QueryBuilder) == true">
                <if test="idList != null">
                    `id` in
                    <foreach collection="idList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="idSt !=null">
                    `id` >= #{idSt} and
                </if>
                <if test="idEd!=null">
                    `id` &lt;= #{idEd} and
                </if>
                <if test="item_idList != null">
                    `item_id` in
                    <foreach collection="item_idList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="item_idSt !=null">
                    `item_id` >= #{item_idSt} and
                </if>
                <if test="item_idEd!=null">
                    `item_id` &lt;= #{item_idEd} and
                </if>
                <if test="user_idList != null">
                    `user_id` in
                    <foreach collection="user_idList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="user_idSt !=null">
                    `user_id` >= #{user_idSt} and
                </if>
                <if test="user_idEd!=null">
                    `user_id` &lt;= #{user_idEd} and
                </if>
                <if test="codeList != null">
                    `code` in
                    <foreach collection="codeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzyCode!=null and fuzzyCode.size()>0">
                    (
                    <foreach collection="fuzzyCode"  separator="or" item="item">
                        `Code` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyCode!=null and rightFuzzyCode.size()>0">
                    (
                    <foreach collection="rightFuzzyCode"  separator="or" item="item">
                        `Code` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test="addTimeList != null">
                    `addTime` in
                    <foreach collection="addTimeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="addTimeSt !=null">
                    `addTime` >= #{addTimeSt} and
                </if>
                <if test="addTimeEd!=null">
                    `addTime` &lt;= #{addTimeEd} and
                </if>
                <if test="totalList != null">
                    `total` in
                    <foreach collection="totalList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzyTotal!=null and fuzzyTotal.size()>0">
                    (
                    <foreach collection="fuzzyTotal"  separator="or" item="item">
                        `Total` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyTotal!=null and rightFuzzyTotal.size()>0">
                    (
                    <foreach collection="rightFuzzyTotal"  separator="or" item="item">
                        `Total` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test="isDeleteList != null">
                    `isDelete` in
                    <foreach collection="isDeleteList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="isDeleteSt !=null">
                    `isDelete` >= #{isDeleteSt} and
                </if>
                <if test="isDeleteEd!=null">
                    `isDelete` &lt;= #{isDeleteEd} and
                </if>
                <if test="statusList != null">
                    `status` in
                    <foreach collection="statusList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="statusSt !=null">
                    `status` >= #{statusSt} and
                </if>
                <if test="statusEd!=null">
                    `status` &lt;= #{statusEd} and
                </if>
            </if>
        </trim>
    </select>

    <select id="queryItemOrderLimit1" resultMap="ItemOrderMap">
        select
        <include refid="baseResult"></include>
        from  `item_order`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="id != null">
                `id` = #{id} and
            </if>
            <if test="item_id != null">
                `item_id` = #{item_id} and
            </if>
            <if test="user_id != null">
                `user_id` = #{user_id} and
            </if>
            <if test="code != null and code!=''">
                `code` = #{code} and
            </if>
            <if test="addTime != null">
                `addTime` = #{addTime} and
            </if>
            <if test="total != null and total!=''">
                `total` = #{total} and
            </if>
            <if test="isDelete != null">
                `isDelete` = #{isDelete} and
            </if>
            <if test="status != null">
                `status` = #{status} and
            </if>
            <if test = "(_parameter instanceof packageModel.ItemOrder$QueryBuilder) == true">
                    <if test="idList != null">
                        `id` in
                        <foreach collection="idList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="idSt !=null">
                    `id` >= #{idSt} and
                </if>
                <if test="idEd!=null">
                    `id` &lt;= #{idEd} and
                </if>
                    <if test="item_idList != null">
                        `item_id` in
                        <foreach collection="item_idList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="item_idSt !=null">
                    `item_id` >= #{item_idSt} and
                </if>
                <if test="item_idEd!=null">
                    `item_id` &lt;= #{item_idEd} and
                </if>
                    <if test="user_idList != null">
                        `user_id` in
                        <foreach collection="user_idList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="user_idSt !=null">
                    `user_id` >= #{user_idSt} and
                </if>
                <if test="user_idEd!=null">
                    `user_id` &lt;= #{user_idEd} and
                </if>
                    <if test="codeList != null">
                        `code` in
                        <foreach collection="codeList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzyCode!=null and fuzzyCode.size()>0">
                    (
                    <foreach collection="fuzzyCode"  separator="or" item="item">
                        `Code` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyCode!=null and rightFuzzyCode.size()>0">
                    (
                    <foreach collection="rightFuzzyCode"  separator="or" item="item">
                        `Code` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                    <if test="addTimeList != null">
                        `addTime` in
                        <foreach collection="addTimeList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="addTimeSt !=null">
                    `addTime` >= #{addTimeSt} and
                </if>
                <if test="addTimeEd!=null">
                    `addTime` &lt;= #{addTimeEd} and
                </if>
                    <if test="totalList != null">
                        `total` in
                        <foreach collection="totalList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzyTotal!=null and fuzzyTotal.size()>0">
                    (
                    <foreach collection="fuzzyTotal"  separator="or" item="item">
                        `Total` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyTotal!=null and rightFuzzyTotal.size()>0">
                    (
                    <foreach collection="rightFuzzyTotal"  separator="or" item="item">
                        `Total` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                    <if test="isDeleteList != null">
                        `isDelete` in
                        <foreach collection="isDeleteList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="isDeleteSt !=null">
                    `isDelete` >= #{isDeleteSt} and
                </if>
                <if test="isDeleteEd!=null">
                    `isDelete` &lt;= #{isDeleteEd} and
                </if>
                    <if test="statusList != null">
                        `status` in
                        <foreach collection="statusList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="statusSt !=null">
                    `status` >= #{statusSt} and
                </if>
                <if test="statusEd!=null">
                    `status` &lt;= #{statusEd} and
                </if>
            </if>
        </trim>
        limit 1
    </select>

    <sql id="allResult">
        <trim suffixOverrides=",">
        `id`,
        `item_id`,
        `user_id`,
        `code`,
        `addTime`,
        `total`,
        `isDelete`,
        `status`,
        </trim>
    </sql>



    <sql id="baseResult">
        <trim suffixOverrides=",">
            <if test = "(_parameter instanceof packageModel.ItemOrder$QueryBuilder) == true">

                <if test="fetchFields==null">
                    <include refid="allResult"></include>
                </if>
                <if test="fetchFields!=null">
                    <if test="fetchFields.AllFields !=null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields ==null and fetchFields.fetchFields==null and fetchFields.excludeFields==null and fetchFields.otherFields==null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.fetchFields!=null">
                    <if test="fetchFields.fetchFields.id==true">
                        `id`,
                    </if>
                    <if test="fetchFields.fetchFields.item_id==true">
                        `item_id`,
                    </if>
                    <if test="fetchFields.fetchFields.user_id==true">
                        `user_id`,
                    </if>
                    <if test="fetchFields.fetchFields.code==true">
                        `code`,
                    </if>
                    <if test="fetchFields.fetchFields.addTime==true">
                        `addTime`,
                    </if>
                    <if test="fetchFields.fetchFields.total==true">
                        `total`,
                    </if>
                    <if test="fetchFields.fetchFields.isDelete==true">
                        `isDelete`,
                    </if>
                    <if test="fetchFields.fetchFields.status==true">
                        `status`,
                    </if>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.excludeFields!=null">
                    <if test="fetchFields.excludeFields.id==null">
                        `id`,
                    </if>
                    <if test="fetchFields.excludeFields.item_id==null">
                        `item_id`,
                    </if>
                    <if test="fetchFields.excludeFields.user_id==null">
                        `user_id`,
                    </if>
                    <if test="fetchFields.excludeFields.code==null">
                        `code`,
                    </if>
                    <if test="fetchFields.excludeFields.addTime==null">
                        `addTime`,
                    </if>
                    <if test="fetchFields.excludeFields.total==null">
                        `total`,
                    </if>
                    <if test="fetchFields.excludeFields.isDelete==null">
                        `isDelete`,
                    </if>
                    <if test="fetchFields.excludeFields.status==null">
                        `status`,
                    </if>
                    </if>
                    <if test="fetchFields.otherFields!=null and fetchFields.otherFields.size>0">
                        <foreach collection="fetchFields.otherFields" index="index" item="item" separator=",">
                        `#{item}`
                        </foreach>
                    </if>
                </if>
            </if>
            <if test="(_parameter instanceof packageModel.ItemOrder$QueryBuilder) == false" >
                <include refid="allResult"></include>
            </if>

        </trim>
    </sql>


</mapper>