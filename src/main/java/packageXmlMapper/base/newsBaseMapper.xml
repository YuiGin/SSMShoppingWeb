<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="packageMapper.base.newsBaseMapper">


    <insert id="insertnews"  useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `news`
        (
        <trim suffixOverrides=",">
                    <if test="id!=null">
                        `id`,
                    </if>
                    <if test="name!=null">
                        `name`,
                    </if>
                    <if test="content!=null">
                        `content`,
                    </if>
                    <if test="addTime!=null">
                        `addTime`,
                    </if>
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
                <if test="id!=null">
                    #{id},
                </if>
                <if test="name!=null">
                    #{name},
                </if>
                <if test="content!=null">
                    #{content},
                </if>
                <if test="addTime!=null">
                    #{addTime},
                </if>
        </trim>
        )
    </insert>




    <update id="updatenews">
        UPDATE `news`
        SET
        <trim suffixOverrides=",">
            <if test="name != null and name!=''">
                `name` = #{name},
            </if>
            <if test="content != null and content!=''">
                `content` = #{content},
            </if>
            <if test="addTime != null">
                `addTime` = #{addTime},
            </if>
        </trim>
        WHERE
        <trim suffixOverrides="and">
                `id` = #{id} and
        </trim>
    </update>

    <update id="update">
        UPDATE `news`
        SET
        <trim suffixOverrides=",">
        <if test="set.name != null and set.name!=''">
            `name` = #{set.name},
        </if>
        <if test="set.content != null and set.content!=''">
            `content` = #{set.content},
        </if>
        <if test="set.addTime != null">
            `addTime` = #{set.addTime},
        </if>
        </trim>
        <trim prefix="where" suffixOverrides="and | or">
                <if test="where.idList != null">
                    `id` in
                    <foreach collection="where.idList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.idSt !=null">
                `id` >= #{where.idSt} and
            </if>
            <if test="where.idEd!=null">
                `id` &lt;= #{where.idEd} and
            </if>
                <if test="where.nameList != null">
                    `name` in
                    <foreach collection="where.nameList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzyName!=null and where.fuzzyName.size()>0">
                (
                <foreach collection="where.fuzzyName"  separator="or" item="item">
                    `Name` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyName!=null and where.rightFuzzyName.size()>0">
                (
                <foreach collection="where.rightFuzzyName"  separator="or" item="item">
                    `Name` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
                <if test="where.contentList != null">
                    `content` in
                    <foreach collection="where.contentList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzyContent!=null and where.fuzzyContent.size()>0">
                (
                <foreach collection="where.fuzzyContent"  separator="or" item="item">
                    `Content` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyContent!=null and where.rightFuzzyContent.size()>0">
                (
                <foreach collection="where.rightFuzzyContent"  separator="or" item="item">
                    `Content` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
                <if test="where.addTimeList != null">
                    `addTime` in
                    <foreach collection="where.addTimeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.addTimeSt !=null">
                `addTime` >= #{where.addTimeSt} and
            </if>
            <if test="where.addTimeEd!=null">
                `addTime` &lt;= #{where.addTimeEd} and
            </if>
        </trim>
    </update>


    <resultMap type="packageModel.news" id="newsMap">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="content" column="content"/>
        <result property="addTime" column="addTime"/>
    </resultMap>


    <select id="querynews" resultMap="newsMap">
        select
        <include refid="baseResult"></include>
        from  `news`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="id != null">
                `id` = #{id} and
            </if>
            <if test="name != null and name!=''">
                `name` = #{name} and
            </if>
            <if test="content != null and content!=''">
                `content` = #{content} and
            </if>
            <if test="addTime != null">
                `addTime` = #{addTime} and
            </if>
            <if test = "(_parameter instanceof packageModel.news$QueryBuilder) == true">
                <if test="idList != null">
                    `id` in
                    <foreach collection="idList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="idSt !=null">
                    `id` >= #{idSt} and
                </if>
                <if test="idEd!=null">
                    `id` &lt;= #{idEd} and
                </if>
                <if test="nameList != null">
                    `name` in
                    <foreach collection="nameList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzyName!=null and fuzzyName.size()>0">
                    (
                    <foreach collection="fuzzyName"  separator="or" item="item">
                        `Name` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyName!=null and rightFuzzyName.size()>0">
                    (
                    <foreach collection="rightFuzzyName"  separator="or" item="item">
                        `Name` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test="contentList != null">
                    `content` in
                    <foreach collection="contentList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzyContent!=null and fuzzyContent.size()>0">
                    (
                    <foreach collection="fuzzyContent"  separator="or" item="item">
                        `Content` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyContent!=null and rightFuzzyContent.size()>0">
                    (
                    <foreach collection="rightFuzzyContent"  separator="or" item="item">
                        `Content` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test="addTimeList != null">
                    `addTime` in
                    <foreach collection="addTimeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="addTimeSt !=null">
                    `addTime` >= #{addTimeSt} and
                </if>
                <if test="addTimeEd!=null">
                    `addTime` &lt;= #{addTimeEd} and
                </if>
            </if>
        </trim>
    </select>

    <select id="querynewsLimit1" resultMap="newsMap">
        select
        <include refid="baseResult"></include>
        from  `news`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="id != null">
                `id` = #{id} and
            </if>
            <if test="name != null and name!=''">
                `name` = #{name} and
            </if>
            <if test="content != null and content!=''">
                `content` = #{content} and
            </if>
            <if test="addTime != null">
                `addTime` = #{addTime} and
            </if>
            <if test = "(_parameter instanceof packageModel.news$QueryBuilder) == true">
                    <if test="idList != null">
                        `id` in
                        <foreach collection="idList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="idSt !=null">
                    `id` >= #{idSt} and
                </if>
                <if test="idEd!=null">
                    `id` &lt;= #{idEd} and
                </if>
                    <if test="nameList != null">
                        `name` in
                        <foreach collection="nameList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzyName!=null and fuzzyName.size()>0">
                    (
                    <foreach collection="fuzzyName"  separator="or" item="item">
                        `Name` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyName!=null and rightFuzzyName.size()>0">
                    (
                    <foreach collection="rightFuzzyName"  separator="or" item="item">
                        `Name` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                    <if test="contentList != null">
                        `content` in
                        <foreach collection="contentList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzyContent!=null and fuzzyContent.size()>0">
                    (
                    <foreach collection="fuzzyContent"  separator="or" item="item">
                        `Content` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyContent!=null and rightFuzzyContent.size()>0">
                    (
                    <foreach collection="rightFuzzyContent"  separator="or" item="item">
                        `Content` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                    <if test="addTimeList != null">
                        `addTime` in
                        <foreach collection="addTimeList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="addTimeSt !=null">
                    `addTime` >= #{addTimeSt} and
                </if>
                <if test="addTimeEd!=null">
                    `addTime` &lt;= #{addTimeEd} and
                </if>
            </if>
        </trim>
        limit 1
    </select>

    <sql id="allResult">
        <trim suffixOverrides=",">
        `id`,
        `name`,
        `content`,
        `addTime`,
        </trim>
    </sql>



    <sql id="baseResult">
        <trim suffixOverrides=",">
            <if test = "(_parameter instanceof packageModel.news$QueryBuilder) == true">

                <if test="fetchFields==null">
                    <include refid="allResult"></include>
                </if>
                <if test="fetchFields!=null">
                    <if test="fetchFields.AllFields !=null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields ==null and fetchFields.fetchFields==null and fetchFields.excludeFields==null and fetchFields.otherFields==null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.fetchFields!=null">
                    <if test="fetchFields.fetchFields.id==true">
                        `id`,
                    </if>
                    <if test="fetchFields.fetchFields.name==true">
                        `name`,
                    </if>
                    <if test="fetchFields.fetchFields.content==true">
                        `content`,
                    </if>
                    <if test="fetchFields.fetchFields.addTime==true">
                        `addTime`,
                    </if>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.excludeFields!=null">
                    <if test="fetchFields.excludeFields.id==null">
                        `id`,
                    </if>
                    <if test="fetchFields.excludeFields.name==null">
                        `name`,
                    </if>
                    <if test="fetchFields.excludeFields.content==null">
                        `content`,
                    </if>
                    <if test="fetchFields.excludeFields.addTime==null">
                        `addTime`,
                    </if>
                    </if>
                    <if test="fetchFields.otherFields!=null and fetchFields.otherFields.size>0">
                        <foreach collection="fetchFields.otherFields" index="index" item="item" separator=",">
                        `#{item}`
                        </foreach>
                    </if>
                </if>
            </if>
            <if test="(_parameter instanceof packageModel.news$QueryBuilder) == false" >
                <include refid="allResult"></include>
            </if>

        </trim>
    </sql>


</mapper>